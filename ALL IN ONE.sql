
------------------------------------- TABLE MARANATHA SYSTEM --------------------------------------
GO

CREATE DATABASE SISTEMA_MARANATHA

GO

USE SISTEMA_MARANATHA
--USE DBMARANATHADEMO

GO

CREATE TABLE CATEGORIA(
	IDCATEGORIA INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	CODIGO AS ('CAT'+RIGHT ('00'+ CONVERT(VARCHAR, IDCATEGORIA),(2))),
	NOMBRE NVARCHAR(30) UNIQUE NOT NULL,
	DESCRIPCION NVARCHAR(256) NULL,
	PORCIENTO_VENTA DECIMAL (8,2) NULL,
	PORCIENTO_DESCUENTO DECIMAL (8,2)
)

GO

CREATE TABLE MARCA(
	IDMARCA INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	CODIGO AS ('MRC'+RIGHT ('00'+ CONVERT(VARCHAR, IDMARCA),(2))),
	NOMBRE NVARCHAR(30) UNIQUE NOT NULL,
	DESCRIPCION NVARCHAR(256) NULL
)

GO

CREATE TABLE PRODUCTOS(
	IDPRODUCTO INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
	CODIGO AS ('PRO'+RIGHT ('0000'+ CONVERT(VARCHAR, IDPRODUCTO),(4))),
	PRODUCTO NVARCHAR(50) NOT NULL,
	PRECIO_COMPRA DECIMAL (18,2) NULL,
	PRECIO_VENTA DECIMAL (18,2) NULL,
	STOCK INT NULL,

	-- FOREIGN KEYS
	IDCATEGORIA INT NOT NULL,
	IDMARCA INT NOT NULL

	-- REFERENCIAR O RELACIONAR
	CONSTRAINT RELACIONAR_CATEGORIA FOREIGN KEY (IDCATEGORIA) REFERENCES CATEGORIA(IDCATEGORIA),
	CONSTRAINT RELACIONAR_MARCA FOREIGN KEY (IDMARCA) REFERENCES MARCA(IDMARCA)
)

GO

CREATE TABLE ROL(
	IDROL INT IDENTITY (1,1) PRIMARY KEY,
	ROL VARCHAR(20) NOT NULL
)

GO

INSERT INTO ROL(ROL) VALUES('admin')

GO

INSERT INTO ROL(ROL) VALUES('user')

GO

CREATE TABLE USUARIO(
	IDUSUARIO INT IDENTITY (1,1) PRIMARY KEY,
	CODIGO AS ('USU'+RIGHT ('00'+ CONVERT(VARCHAR, IDUSUARIO),(2))),
	USUARIO NVARCHAR(15) UNIQUE NOT NULL,
	CONTRASEÃ‘A NVARCHAR(100) NOT NULL,
	NOMBRE NVARCHAR(40),
	APELLIDO NVARCHAR(40),

	-- FOREIGN KEYS
	IDROL INT NOT NULL,
	
	-- REFERENCIAR O RELACIONAR
	CONSTRAINT RELACIONAR_ROL FOREIGN KEY (IDROL) REFERENCES ROL(IDROL),
)

GO

INSERT INTO USUARIO VALUES('admin', '1234', 'Administrador', 'System', 1)

GO

CREATE TABLE CLIENTE(
	IDCLIENTE INT IDENTITY (1,1) PRIMARY KEY,
	CODIGO AS ('CLI'+RIGHT ('00'+ CONVERT(VARCHAR, IDCLIENTE),(2))),
	NOMBRE NVARCHAR (30) NOT NULL,
	APELLIDO NVARCHAR(60) NOT NULL,
	CEDULA VARCHAR(15) NULL,
	APODO NVARCHAR(50) NULL,
	TELEFONO1 VARCHAR(10) NULL,
	TELEFONO2 VARCHAR(10) NULL,
	CELULAR VARCHAR(10) NOT NULL,
	DIRECCION NVARCHAR(256) NOT NULL,
	CASA VARCHAR(50) NOT NULL,
	LUGARDETRABAJO NVARCHAR(60) NULL,
	TELEFONOTRABAJO VARCHAR(10) NULL,
	NOMBRESUPERIOR NVARCHAR(70) NULL,
	TELEFONOSUPERIOR VARCHAR(10) NULL,
	TIEMPOLABORANDO VARCHAR(10) NULL,
	SALARIOMENSUAL DECIMAL(18,2) NULL,
	NOMBRECONYUGUE NVARCHAR(70) NULL,
	TELEFONOCONYUGUE VARCHAR(10) NULL,
	TRABAJOCONYUGUE NVARCHAR(60) NULL,
	TELEFONOTRABAJOCONYUGUE VARCHAR(10) NULL,
	NOMBRESUPERIORCONYUGUE NVARCHAR(70) NULL,
	TELEFONOSUPERIORCONYUGUE VARCHAR(10) NULL,
	TIEMPOLABORANDOCONYUGUE VARCHAR(10) NULL,
	SALARIOMENSUALCONYUGUE DECIMAL(18,2) NULL,
	NOMBRE_APELLIDO_TELEFONO_REFERENCIA1 NVARCHAR(100),
	NOMBRE_APELLIDO_TELEFONO_REFERENCIA2 NVARCHAR(100),
	NOMBRE_APELLIDO_TELEFONO_REFERENCIA3 NVARCHAR(100),
	NOMBRE_APELLIDO_TELEFONO_FAMILIAR1 NVARCHAR(100),
	NOMBRE_APELLIDO_TELEFONO_FAMILIAR2 NVARCHAR(100),
	NOMBRE_APELLIDO_TELEFONO_FAMILIAR3 NVARCHAR(100)
)

GO

CREATE TABLE GARANTE(
	IDGARANTE INT IDENTITY (1,1) PRIMARY KEY,
	CODIGO AS ('GAR'+RIGHT ('00'+ CONVERT(VARCHAR, IDGARANTE),(2))),
	NOMBRE NVARCHAR (30) NOT NULL,
	APELLIDO NVARCHAR(60) NOT NULL,
	CEDULA NVARCHAR(15) NOT NULL,
	TELEFONO1 VARCHAR(10) NULL,
	CELULAR VARCHAR(10)  NULL,
	DIRECCION NVARCHAR(256) NULL,
	TRABAJO NVARCHAR(70) NULL,
	SUELDO DECIMAL (18,2) NULL 
)

GO

CREATE TABLE VENTA(
	IDVENTA INT IDENTITY (1,1) PRIMARY KEY,
	CODIGO AS ('VEN'+RIGHT ('00'+ CONVERT(VARCHAR, IDVENTA),(2))),
	FECHA DATE,
	TOTAL DECIMAL(18,2),
	NOMBRE_CLIENTE NVARCHAR(60),

	-- FOREIGN KEYS
	IDUSUARIO INT NOT NULL,
	IDGARANTE INT DEFAULT NULL

	-- REFERENCIAR O RELACIONAR
	CONSTRAINT RELACIONAR_USUARIOS_V FOREIGN KEY (IDUSUARIO) REFERENCES USUARIO(IDUSUARIO),
	CONSTRAINT RELACIONAR_GARANTE_V FOREIGN KEY (IDGARANTE) REFERENCES GARANTE(IDGARANTE)
)

GO

CREATE TABLE DETALLE_VENTA(
	IDDETALLEVENTA INT IDENTITY (1,1) PRIMARY KEY,
	CODIGO AS ('DVT'+RIGHT ('00'+ CONVERT(VARCHAR, IDDETALLEVENTA),(2))),
	PRECIOVENTA DECIMAL (18,2) NULL,
	CANTIDAD INT NOT NULL,
	DESCUENTO DECIMAL DEFAULT 0.00,
	SUBTOTAL DECIMAL(18,2),

	-- FOREIGN KEYS
	IDVENTA INT NOT NULL,
	IDPRODUCTO INT NOT NULL

	-- REFERENCIAR O RELACIONAR
	CONSTRAINT RELACIONAR_VENTA_DV FOREIGN KEY (IDVENTA) REFERENCES VENTA(IDVENTA),
	CONSTRAINT RELACIONAR_PRODUCTO_DV FOREIGN KEY (IDPRODUCTO) REFERENCES PRODUCTOS(IDPRODUCTO)
)

GO

CREATE TABLE PAGOS(
	IDPAGOS INT IDENTITY (1,1) PRIMARY KEY,
	CODIGO AS ('PAG'+RIGHT ('00'+ CONVERT(VARCHAR, IDPAGOS),(2))),
	ESTADO VARCHAR(20) NOT NULL,

	IDVENTA INT NOT NULL,
	IDCLIENTE INT NOT NULL,
	IDGARANTE INT NOT NULL

	CONSTRAINT RELACIONAR_VENTAS_PG FOREIGN KEY (IDVENTA) REFERENCES VENTA(IDVENTA),
	CONSTRAINT RELACIONAR_CLIENTES_PG FOREIGN KEY (IDCLIENTE) REFERENCES CLIENTE(IDCLIENTE),
	CONSTRAINT RELACIONAR_GARANTE_PG FOREIGN KEY (IDGARANTE) REFERENCES GARANTE(IDGARANTE)
)

GO

CREATE TABLE CREDITO (
	IDCREDIO INT IDENTITY (1,1) PRIMARY KEY,
	CODIGO AS ('CRE'+RIGHT ('00'+ CONVERT(VARCHAR, IDCREDIO),(2))),
	NO_PAGO INT,
	FECHA DATE NOT NULL,
	CUOTAS DECIMAL(18,2) NOT NULL,
	CAPITAL DECIMAL(18,2) NOT NULL,
	INTERES DECIMAL(18,2) NOT NULL,
	MORA DECIMAL(18,2) DEFAULT NULL,
	ESTADO VARCHAR(10) DEFAULT 'NO PAGO',

	-- FOREIGN KEYS
	IDPAGOS INT NOT NULL

	-- REFERENCIAR O RELACIONAR
	CONSTRAINT RELACIONAR_PAGOS_C FOREIGN KEY (IDPAGOS) REFERENCES PAGOS(IDPAGOS)
)

GO

CREATE TABLE COMPRA(
	IDCOMPRA INT IDENTITY (1,1) PRIMARY KEY,
	CODIGO AS ('COM'+RIGHT ('00'+ CONVERT(VARCHAR, IDCOMPRA),(2))),
	FECHA DATE,
	TOTAL DECIMAL(18,2),
	PROVEEDOR NVARCHAR(60),

	-- FOREIGN KEYS
	IDUSUARIO INT NOT NULL,
	-- REFERENCIAR O RELACIONAR
	CONSTRAINT RELACIONAR_USUARIO_C FOREIGN KEY (IDUSUARIO) REFERENCES USUARIO(IDUSUARIO)
)

GO

CREATE TABLE DETALLE_COMPRA(
	IDDETALLECOMPRA INT IDENTITY (1,1) PRIMARY KEY,
	CODIGO AS ('DCT'+RIGHT ('00'+ CONVERT(VARCHAR, IDDETALLECOMPRA),(2))),
	PRECIOCOMPRA DECIMAL (18,2) NULL,
	CANTIDAD INT NOT NULL,
	SUBTOTAL DECIMAL(18,2),

	-- FOREIGN KEYS
	IDCOMPRA INT NOT NULL,
	IDPRODUCTO INT NOT NULL

	-- REFERENCIAR O RELACIONAR
	CONSTRAINT RELACIONAR_COMPRA_C FOREIGN KEY (IDCOMPRA) REFERENCES COMPRA(IDCOMPRA),
	CONSTRAINT RELACIONAR_PRODUCTOS_C FOREIGN KEY (IDPRODUCTO) REFERENCES PRODUCTOS(IDPRODUCTO)
)

GO

CREATE TABLE PAGOFACTURA(
	IDPAGOF INT IDENTITY (1,1) PRIMARY KEY,
	CODIGO AS ('PGF'+ RIGHT ('00' + CONVERT(VARCHAR, IDPAGOF),(2))),
	FECHA DATE,
	DESCRIPCION NVARCHAR (100),
	CUOTAS_PAGADAS INT,
	CUOTAS_FALTANTES INT,
	TOTAL DECIMAL (18,2),

	-- FOREIGN KEYS
	IDCLIENTE INT NOT NULL,
	IDUSUARIO INT NOT NULL

	-- REFERENCIAR O RELACIONAR
	CONSTRAINT RELACIONAR_CLIENTE_PF FOREIGN KEY (IDCLIENTE) REFERENCES CLIENTE(IDCLIENTE),
	CONSTRAINT RELACIONAR_USUARIO_PF FOREIGN KEY (IDUSUARIO) REFERENCES USUARIO(IDUSUARIO),
)

GO


-------------------------------------- STORES PROCEDURES MARANATHA SYSTEM --------------------------------------


--------------------------------------------------------- STOREPROCEDURES CATEGORIA ---------------------------------------------------------

-- PROCEDIMIENTO ALMACENADO BUSCAR CATEGORIA

CREATE PROC SP_BUSCARCATEGORIA
@BUSCAR NVARCHAR(20)
AS
SELECT * FROM CATEGORIA
WHERE NOMBRE LIKE @BUSCAR + '%'

-- PROCEDIMIENTO ALMACENADO BUSCAR CATEGORIA POR ID

GO

CREATE PROC SP_BUSCARCATEGORIAXID
@ID INT
AS
SELECT * FROM CATEGORIA
WHERE IDCATEGORIA = @ID

GO

-- PROCEDIMIENTO ALMACENADO INSERTAR CATEGORIA

CREATE PROC SP_INSERTARCATEGORIA
@NOMBRE NVARCHAR(20),
@DESCRIPCION NVARCHAR(256),
@PORCIENTO_VENTA DECIMAL (8,2),
@PORCIENTO_DESCUENTO DECIMAL (8,2)
AS
INSERT INTO CATEGORIA VALUES (@NOMBRE, @DESCRIPCION,@PORCIENTO_VENTA,@PORCIENTO_DESCUENTO)

GO

-- PROCEDIMIENTO ALMACENADO EDITAR CATEGORIA

CREATE PROC SP_EDITARCATEGORIA
@IDCATEGORIA INT,
@NOMBRE NVARCHAR(30),
@DESCRIPCION NVARCHAR(256),
@PORCIENTO_VENTA DECIMAL (8,2),
@PORCIENTO_DESCUENTO DECIMAL (8,2)
AS
UPDATE CATEGORIA SET NOMBRE = @NOMBRE, DESCRIPCION = @DESCRIPCION, PORCIENTO_VENTA = @PORCIENTO_VENTA,PORCIENTO_DESCUENTO = @PORCIENTO_DESCUENTO
WHERE IDCATEGORIA = @IDCATEGORIA

GO

-- PROCEDIMIENTO ALMACENADO ELIMINAR CATEGORIA

CREATE PROC SP_ELIMINARCATEGORIA
@IDCATEGORIA INT
AS
DELETE CATEGORIA
WHERE IDCATEGORIA = @IDCATEGORIA

GO

--------------------------------------------------------- STOREPROCEDURES MARCAS ---------------------------------------------------------

-- PROCEDIMIENTO ALMACENADO BUSCAR MARCA

CREATE PROC SP_BUSCARMARCA
@BUSCAR NVARCHAR(20)
AS
SELECT * FROM MARCA
WHERE NOMBRE LIKE @BUSCAR + '%'

GO

-- PROCEDIMIENTO ALMACENADO INSERTAR MARCA

CREATE PROC SP_INSERTARMARCA
@NOMBRE NVARCHAR(20),
@DESCRIPCION NVARCHAR(256)
AS
INSERT INTO MARCA VALUES (@NOMBRE, @DESCRIPCION)

GO
-- PROCEDIMIENTO ALMACENADO EDITAR MARCA

CREATE PROC SP_EDITARMARCA
@IDMARCA INT,
@NOMBRE NVARCHAR(30),
@DESCRIPCION NVARCHAR(256)
AS
UPDATE MARCA SET NOMBRE = @NOMBRE, DESCRIPCION = @DESCRIPCION
WHERE IDMARCA = @IDMARCA

GO
-- PROCEDIMIENTO ALMACENADO ELIMINAR CATEGORIA

CREATE PROC SP_ELIMINARMARCA
@IDMARCA INT
AS
DELETE MARCA
WHERE IDMARCA = @IDMARCA

GO

--------------------------------------------------------- STOREPROCEDURES PRODUCTOS ---------------------------------------------------------
	
--- PROCEDIMIENTO ALMACENADO PARA LISTAR PRODUCTO COMBO
CREATE PROC SP_LISTARPRODUC
AS
SELECT * FROM PRODUCTOS 
	
GO

-- PROCEDIMIENTO ALMACENADO LISTAR PRODUCTOS

CREATE PROC SP_LISTARPRODUCTOS
AS
SELECT TOP 100
PRODUCTOS.IDPRODUCTO,
PRODUCTOS.CODIGO,
PRODUCTOS.PRODUCTO,
PRODUCTOS.IDCATEGORIA,
CATEGORIA.NOMBRE AS CATEGORIA,
PRODUCTOS.IDMARCA,
MARCA.NOMBRE AS MARCA,
PRODUCTOS.PRECIO_COMPRA,
PRODUCTOS.PRECIO_VENTA,
PRODUCTOS.STOCK
FROM PRODUCTOS
INNER JOIN CATEGORIA ON PRODUCTOS.IDCATEGORIA = CATEGORIA.IDCATEGORIA
INNER JOIN MARCA ON PRODUCTOS.IDMARCA = MARCA.IDMARCA
ORDER BY IDPRODUCTO ASC

GO

-- PROCEDIMIENTO ALMACENADO BUSCAR PRODUCTOS

CREATE PROC SP_BUSCARPRODUCTOS
@BUSCAR NVARCHAR(20)
AS
SELECT TOP 100
PRODUCTOS.IDPRODUCTO,
PRODUCTOS.CODIGO,
PRODUCTOS.PRODUCTO,
PRODUCTOS.IDCATEGORIA,
CATEGORIA.NOMBRE AS CATEGORIA,
PRODUCTOS.IDMARCA,
MARCA.NOMBRE AS MARCA,
PRODUCTOS.PRECIO_COMPRA,
PRODUCTOS.PRECIO_VENTA,
PRODUCTOS.STOCK
FROM PRODUCTOS
INNER JOIN CATEGORIA ON PRODUCTOS.IDCATEGORIA = CATEGORIA.IDCATEGORIA
INNER JOIN MARCA ON PRODUCTOS.IDMARCA = MARCA.IDMARCA
WHERE PRODUCTO LIKE @BUSCAR + '%'
ORDER BY IDPRODUCTO ASC

GO

-- PROCEDIMIENTO ALMACENADO INSERTAR PRODUCTOS

CREATE PROC SP_INSERTARPRODUCTOS
@PRODUCTO NVARCHAR(50),
@PRECIO_COMPRA DECIMAL (18,2),
@PRECIO_VENTA DECIMAL (18,2),
@STOCK INT,
@IDCATEGORIA INT,
@IDMARCA INT
AS
INSERT INTO PRODUCTOS VALUES (@PRODUCTO, @PRECIO_COMPRA, @PRECIO_VENTA, @STOCK, @IDCATEGORIA, @IDMARCA)

GO

-- PROCEDIMIENTO ALMACENADO EDITAR PRODUCTO

CREATE PROC SP_EDITARPRODUCTOS
@IDPRODUCTO INT,
@PRODUCTO NVARCHAR(50),
@PRECIO_COMPRA DECIMAL (18,2),
@PRECIO_VENTA DECIMAL (18,2),
@STOCK INT,
@IDCATEGORIA INT,
@IDMARCA INT
AS
UPDATE PRODUCTOS SET PRODUCTO = @PRODUCTO, PRECIO_COMPRA = @PRECIO_COMPRA, PRECIO_VENTA = @PRECIO_VENTA, STOCK = @STOCK, IDCATEGORIA = @IDCATEGORIA, IDMARCA = @IDMARCA
WHERE IDPRODUCTO = @IDPRODUCTO

GO
-- PROCEDIMIENTO ALMACENADO ELIMINAR PRODUCTO

CREATE PROC SP_ELIMINARPRODUCTOS
@IDPRODUCTO INT
AS
DELETE PRODUCTOS 
WHERE IDPRODUCTO = @IDPRODUCTO

GO

-- PROCEDIMIENTO ALMACENADO CUENTAS TOTALES

CREATE PROC SP_TOTALESPRODUCT
@TOTALCATEGORIA INT OUTPUT,
@TOTALMARCA INT OUTPUT,
@TOTALPRODUCTO INT OUTPUT,
@SUMSTOCK INT OUTPUT
AS
SET @TOTALCATEGORIA = (SELECT COUNT(IDCATEGORIA) AS CATEGORIAS FROM CATEGORIA)
SET @TOTALMARCA = (SELECT COUNT(IDMARCA) AS MARCA FROM MARCA)
SET @TOTALPRODUCTO = (SELECT COUNT(IDPRODUCTO) AS PRODUCTO FROM PRODUCTOS)
SET @SUMSTOCK = (SELECT SUM(STOCK) AS TOTALPRODUCTOS FROM PRODUCTOS)

GO

--------------------------------------------------------- STOREPROCEDURES ROL ---------------------------------------------------------


-- PROCEDIMIENTO ALMACENADO BUSCAR ROL

CREATE PROC SP_BUSCAR_ROL
@BUSCAR NVARCHAR(20)
AS
SELECT * FROM ROL
WHERE ROL LIKE @BUSCAR + '%'

GO

--------------------------------------------------------- STOREPROCEDURES USUARIO ---------------------------------------------------------


-- PROCEDIMIENTO ALMACENADO BUSCAR USUARIO

CREATE PROC SP_BUSCAR_USUARIO
@BUSCAR NVARCHAR(20)
AS
SELECT * FROM USUARIO
WHERE USUARIO LIKE @BUSCAR + '%'

GO

-- PROCEDIMIENTO ALMACENADO INSERTAR USUARIO

CREATE PROC SP_INSERTAR_USUARIO
@USUARIO NVARCHAR(15),
@CONTRASEÃ‘A NVARCHAR(100),
@NOMBRE NVARCHAR(40),
@APELLIDO NVARCHAR(40),
@IDROL INT
AS
INSERT INTO USUARIO VALUES (@USUARIO, @CONTRASEÃ‘A,@NOMBRE ,@APELLIDO,@IDROL)

GO

-- PROCEDIMIENTO ALMACENADO EDITAR USUARIO

CREATE PROC SP_EDITAR_USUARIO
@IDUSUARIO INT,
@USUARIO NVARCHAR(15),
@CONTRASEÃ‘A NVARCHAR(100),
@NOMBRE NVARCHAR(40),
@APELLIDO NVARCHAR(40),
@IDROL INT
AS
UPDATE USUARIO SET USUARIO = @USUARIO, CONTRASEÃ‘A = @CONTRASEÃ‘A, IDROL=@IDROL, NOMBRE = @NOMBRE, APELLIDO = @APELLIDO
WHERE IDUSUARIO = @IDUSUARIO

GO

-- PROCEDIMIENTO ALMACENADO ELIMINAR USUARIO

CREATE PROC SP_ELIMINAR_USUARIO
@IDUSUARIO INT
AS
DELETE USUARIO
WHERE IDUSUARIO = @IDUSUARIO

GO

-----PROCEDIMIENTO ALMACENADO LISTAR USUARIOS

CREATE PROC SP_LISTARUSUARIO
AS
SELECT TOP 100
USUARIO.IDUSUARIO,
USUARIO.CODIGO,
USUARIO.NOMBRE,
USUARIO.APELLIDO,
USUARIO.USUARIO,
USUARIO.CONTRASEÃ‘A,
ROL.ROL AS ROL
FROM USUARIO
INNER JOIN ROL ON USUARIO.IDROL = ROL.IDROL

GO

----PROCEDIMIENTO ALMACENADO LOGIN
CREATE PROC SP_LOGIN
@USUARIO NVARCHAR(100),
@CONTRASEÃ‘A NVARCHAR(15)
AS
SELECT
USUARIO.IDUSUARIO,
USUARIO.CODIGO,
USUARIO.NOMBRE,
USUARIO.APELLIDO,
USUARIO.USUARIO,
USUARIO.CONTRASEÃ‘A,
ROL.ROL AS ROL
FROM USUARIO
INNER JOIN ROL ON USUARIO.IDROL = ROL.IDROL
WHERE USUARIO = @USUARIO and CONTRASEÃ‘A = @CONTRASEÃ‘A

GO


--------------------------------------------------------- STOREPROCEDURES CLIENTE ---------------------------------------------------------
	

-- PROCEDIMIENTO ALMACENADO BUSCAR CLIENTE

CREATE PROC SP_BUSCAR_CLIENTE
@BUSCAR NVARCHAR(20)
AS
SELECT * FROM CLIENTE
WHERE NOMBRE LIKE @BUSCAR + '%'

-- PROCEDIMIENTO ALMACENADO BUSCAR CLIENTE ID

GO

CREATE PROC SP_BUSCAR_CLIENTE_ID
@ID NVARCHAR(20)
AS
SELECT IDCLIENTE, NOMBRE + ' ' + APELLIDO AS 'CLIENTE' FROM CLIENTE
WHERE IDCLIENTE = @ID

GO
-- PROCEDIMIENTO ALMACENADO INSERTAR CLIENTE

CREATE PROC SP_INSERTAR_CLIENTE

@NOMBRE NVARCHAR (30),
@APELLIDO NVARCHAR(60),
@CEDULA VARCHAR(15),
@APODO NVARCHAR(50) ,
@TELEFONO1 VARCHAR(10) ,
@TELEFONO2 VARCHAR(10) ,
@CELULAR VARCHAR(10),
@DIRECCION NVARCHAR(256),
@CASA VARCHAR(50),
@LUGARDETRABAJO NVARCHAR(60),
@TELEFONOTRABAJO VARCHAR(10),
@NOMBRESUPERIOR NVARCHAR(70),
@TELEFONOSUPERIOR VARCHAR(10),
@TIEMPOLABORANDO VARCHAR(10),
@SALARIOMENSUAL DECIMAL(18,2),
@NOMBRECONYUGUE NVARCHAR(70),
@TELEFONOCONYUGUE VARCHAR(10),
@TRABAJOCONYUGUE NVARCHAR(60),
@TELEFONOTRABAJOCONYUGUE VARCHAR(10),
@NOMBRESUPERIORCONYUGUE NVARCHAR(70),
@TELEFONOSUPERIORCONYUGUE VARCHAR(10),
@TIEMPOLABORANDOCONYUGUE VARCHAR(10),
@SALARIOMENSUALCONYUGUE DECIMAL(18,2),
@NOMBRE_APELLIDO_TELEFONO_REFERENCIA1 NVARCHAR(100),
@NOMBRE_APELLIDO_TELEFONO_REFERENCIA2 NVARCHAR(100),
@NOMBRE_APELLIDO_TELEFONO_REFERENCIA3 NVARCHAR(100),
@NOMBRE_APELLIDO_TELEFONO_FAMILIAR1 NVARCHAR(100),
@NOMBRE_APELLIDO_TELEFONO_FAMILIAR2 NVARCHAR(100),
@NOMBRE_APELLIDO_TELEFONO_FAMILIAR3 NVARCHAR(100) 

AS
INSERT INTO CLIENTE VALUES (@NOMBRE, @APELLIDO, @CEDULA, @APODO, @TELEFONO1, @TELEFONO2, @CELULAR, @DIRECCION, @CASA,
							@LUGARDETRABAJO, @TELEFONOTRABAJO, @NOMBRESUPERIOR, @TELEFONOSUPERIOR, @TIEMPOLABORANDO,
							@SALARIOMENSUAL, @NOMBRECONYUGUE, @TELEFONOCONYUGUE, @TRABAJOCONYUGUE,
							@TELEFONOTRABAJOCONYUGUE, @NOMBRESUPERIORCONYUGUE, @TELEFONOSUPERIORCONYUGUE, @TIEMPOLABORANDOCONYUGUE,
							@SALARIOMENSUALCONYUGUE, @NOMBRE_APELLIDO_TELEFONO_REFERENCIA1, @NOMBRE_APELLIDO_TELEFONO_REFERENCIA2,
							@NOMBRE_APELLIDO_TELEFONO_REFERENCIA3, @NOMBRE_APELLIDO_TELEFONO_FAMILIAR1,
							@NOMBRE_APELLIDO_TELEFONO_FAMILIAR2, @NOMBRE_APELLIDO_TELEFONO_FAMILIAR3)

-- PROCEDIMIENTO ALMACENADO EDITAR CLIENTE

GO

CREATE PROC SP_EDITAR_CLIENTE
@IDCLIENTE INT ,
@NOMBRE NVARCHAR (30),
@APELLIDO NVARCHAR(60),
@APODO NVARCHAR(50) ,
@TELEFONO1 VARCHAR(10) ,
@TELEFONO2 VARCHAR(10) ,
@CELULAR VARCHAR(10),
@DIRECCION NVARCHAR(256),
@CASA VARCHAR(50),
@LUGARDETRABAJO NVARCHAR(60),
@TELEFONOTRABAJO VARCHAR(10),
@NOMBRESUPERIOR NVARCHAR(70),
@TELEFONOSUPERIOR VARCHAR(10),
@TIEMPOLABORANDO VARCHAR(10),
@SALARIOMENSUAL DECIMAL(18,2),
@NOMBRECONYUGUE NVARCHAR(70),
@TELEFONOCONYUGUE VARCHAR(10),
@TRABAJOCONYUGUE NVARCHAR(60),
@TELEFONOTRABAJOCONYUGUE VARCHAR(10),
@NOMBRESUPERIORCONYUGUE NVARCHAR(70),
@TELEFONOSUPERIORCONYUGUE VARCHAR(10),
@TIEMPOLABORANDOCONYUGUE VARCHAR(10),
@SALARIOMENSUALCONYUGUE DECIMAL(18,2),
@NOMBRE_APELLIDO_TELEFONO_REFERENCIA1 NVARCHAR(100),
@NOMBRE_APELLIDO_TELEFONO_REFERENCIA2 NVARCHAR(100),
@NOMBRE_APELLIDO_TELEFONO_REFERENCIA3 NVARCHAR(100),
@NOMBRE_APELLIDO_TELEFONO_FAMILIAR1 NVARCHAR(100),
@NOMBRE_APELLIDO_TELEFONO_FAMILIAR2 NVARCHAR(100),
@NOMBRE_APELLIDO_TELEFONO_FAMILIAR3 NVARCHAR(100) 

AS
UPDATE CLIENTE SET NOMBRE = @NOMBRE, APELLIDO = @APELLIDO, APODO = @APODO,TELEFONO1 = @TELEFONO1,TELEFONO2 =  @TELEFONO2, CELULAR = @CELULAR, 
					DIRECCION =  @DIRECCION, CASA = @CASA, LUGARDETRABAJO = @LUGARDETRABAJO, TELEFONOTRABAJO = @TELEFONOTRABAJO, 
					NOMBRESUPERIOR = @NOMBRESUPERIOR, TELEFONOSUPERIOR = @TELEFONOSUPERIOR, TIEMPOLABORANDO = @TIEMPOLABORANDO,
					SALARIOMENSUAL = @SALARIOMENSUAL, NOMBRECONYUGUE = @NOMBRECONYUGUE, TELEFONOCONYUGUE = @TELEFONOCONYUGUE, TRABAJOCONYUGUE = @TRABAJOCONYUGUE,
					TELEFONOTRABAJOCONYUGUE = @TELEFONOTRABAJOCONYUGUE, NOMBRESUPERIORCONYUGUE = @NOMBRESUPERIORCONYUGUE, 
					TELEFONOSUPERIORCONYUGUE = @TELEFONOSUPERIORCONYUGUE,TIEMPOLABORANDOCONYUGUE = @TIEMPOLABORANDOCONYUGUE, SALARIOMENSUALCONYUGUE = @SALARIOMENSUALCONYUGUE, 
					NOMBRE_APELLIDO_TELEFONO_REFERENCIA1 = @NOMBRE_APELLIDO_TELEFONO_REFERENCIA1, NOMBRE_APELLIDO_TELEFONO_REFERENCIA2 = @NOMBRE_APELLIDO_TELEFONO_REFERENCIA2,
					NOMBRE_APELLIDO_TELEFONO_REFERENCIA3 = @NOMBRE_APELLIDO_TELEFONO_REFERENCIA3, NOMBRE_APELLIDO_TELEFONO_FAMILIAR1 = @NOMBRE_APELLIDO_TELEFONO_FAMILIAR1,
					NOMBRE_APELLIDO_TELEFONO_FAMILIAR2 = @NOMBRE_APELLIDO_TELEFONO_FAMILIAR2, NOMBRE_APELLIDO_TELEFONO_FAMILIAR3 = @NOMBRE_APELLIDO_TELEFONO_FAMILIAR3

					WHERE IDCLIENTE = @IDCLIENTE


-- PROCEDIMIENTO ALMACENADO ELIMINAR CLIENTE

GO

CREATE PROC SP_ELIMINAR_CLIENTE
@IDCLIENTE INT
AS
DELETE CLIENTE
WHERE IDCLIENTE = @IDCLIENTE

GO

-- PROCEDIMIENTO ALMACENADO LISTAR CLIENTE

CREATE PROC SP_LISTARCLIENTE
AS
SELECT * FROM CLIENTE

GO

-- PROCEDIMIENTO ALMACENADO LISTAR CLIENTE PARA COMBO BOX

CREATE PROC SP_LISTARCLIENTECMB
AS
SELECT IDCLIENTE, NOMBRE + ' ' + APELLIDO AS 'CLIENTE' FROM CLIENTE

GO

--------------------------------------------------------- STOREPROCEDURES VENTAS ---------------------------------------------------------

-- PROCEDIMIENTO ALMACENADO BUSCAR VENTAS

CREATE PROC SP_BUSCAR_VENTA(
@BUSCAR INT
)
AS
SELECT * FROM VENTA WHERE IDVENTA = @BUSCAR

GO

-- PROCEDIMIENTO ALMACENADO MOSTRAR VENTAS

CREATE PROC SP_MOSTRAR_VENTA
AS
SELECT IDVENTA, v.CODIGO, NOMBRE_CLIENTE, u.NOMBRE + ' ' + u.APELLIDO as USUARIO, FECHA, TOTAL FROM VENTA v
INNER JOIN USUARIO u ON v.IDUSUARIO = u.IDUSUARIO
ORDER BY IDVENTA DESC

GO

-- PROCEDIMIENTO ALMACENADO INSERTAR VENTAS

CREATE PROC SP_INSERTAR_VENTA(
	@FECHA DATE,
	@TOTAL DECIMAL(18,2),
	@NOMBRE_CLIENTE Nvarchar(60),
	@IDUSUARIO INT,
	@IDGARANTE INT
)
AS
INSERT INTO VENTA VALUES(@FECHA, @TOTAL, @NOMBRE_CLIENTE, @IDUSUARIO, @IDGARANTE)

GO

-- PROCEDIMIENTO OBTENER ID VENTAS

CREATE PROC SP_OBTENER_ID_VENTA
AS
SELECT MAX(IDVENTA) AS ID FROM VENTA

GO
--------------------------------------------------------- STOREPROCEDURES DETALLEVENTA ---------------------------------------------------------


-- PROCEDIMIENTO ALMACENADO MOSTRAR DETALLEVENTA

CREATE PROC SP_LISTAR_DETALLE_VENTA(
@ID INT
)
AS
SELECT d.CODIGO, v.CODIGO, p.PRODUCTO, PRECIOVENTA, CANTIDAD, DESCUENTO, SUBTOTAL  FROM DETALLE_VENTA d
INNER JOIN PRODUCTOS p ON d.IDPRODUCTO = p.IDPRODUCTO
INNER JOIN VENTA v ON d.IDVENTA = v.IDVENTA
WHERE d.IDVENTA = @ID

GO

-- PROCEDIMIENTO ALMACENADO INSERTAR DETALLEVENTA

CREATE PROC SP_DETALLE_VENTA(
	@PRECIOVENTA DECIMAL (18,2),
	@CANTIDAD INT,
	@DESCUENTO DECIMAL(18,2),
	@SUBTOTAL DECIMAL(18,2),
	@IDVENTA INT,
	@IDPRODUCTO INT
	)
	AS
	INSERT INTO DETALLE_VENTA VALUES(@PRECIOVENTA, @CANTIDAD, @DESCUENTO, @SUBTOTAL, @IDVENTA, @IDPRODUCTO)

-- PROCEDIMIENTO ALMACENADO BUSCAR DATA FACTURA

GO

CREATE PROC SP_DATA_FACTURA(
@ID INT)
AS
SELECT * FROM PRODUCTOS WHERE IDPRODUCTO = @ID

GO

--------------------------------------------------------- STOREPROCEDURES PAGOS ---------------------------------------------------------

-- PROCEDIMIENTO ALMACENADO BUSCAR PAGOS

CREATE PROC SP_BUSCAR_PAGOS(
@ID INT
)
AS
SELECT * FROM PAGOS WHERE IDPAGOS = @ID

GO
-- PROCEDIMIENTO ALMACENADO LISTAR PAGOS

CREATE PROC SP_LISTAR_PAGOS
AS
SELECT TOP 100 IDPAGOS, P.CODIGO, P.ESTADO, V.CODIGO, C.NOMBRE + ' ' + C.APELLIDO AS CLIENTE, C.CEDULA, G.NOMBRE + ' ' + G.APELLIDO AS GARANTE, P.IDVENTA, P.IDCLIENTE, P.IDGARANTE FROM PAGOS P
INNER JOIN CLIENTE C ON P.IDCLIENTE = C.IDCLIENTE
INNER JOIN GARANTE G ON P.IDGARANTE = G.IDGARANTE
INNER JOIN VENTA V ON P.IDVENTA = V.IDVENTA
ORDER BY IDPAGOS DESC

GO
-- PROCEDIMIENTO ALMACENADO BUSCAR ID PAGOS

CREATE PROC SP_OBTENER_ID_PAGOS
AS
SELECT MAX(IDPAGOS) AS ID FROM PAGOS

GO

-- PROCEDIMIENTO ALMACENADO INSERTAR PAGOS

CREATE PROC SP_INSERTAR_PAGOS(
	@ESTADO VARCHAR(20),
	@IDVENTA INT,
	@IDCLIENTE INT,
	@IDGARANTE INT  
)
AS
INSERT INTO PAGOS VALUES (@ESTADO, @IDVENTA, @IDCLIENTE, @IDGARANTE)

GO

--------------------------------------------------------- STOREPROCEDURES GARANTE ---------------------------------------------------------

-- PROCEDIMIENTO ALMACENADO BUSCAR GARANTE

CREATE PROC SP_BUSCAR_GARANTE(
@ID INT
)
AS
SELECT * FROM GARANTE WHERE IDGARANTE = @ID

GO

-- PROCEDIMIENTO ALMACENADO OBTENER ID

CREATE PROC SP_OBTENER_ID_GARANTE
AS
SELECT MAX(IDGARANTE) AS ID FROM GARANTE
select *from USUARIO

GO

-- PROCEDIMIENTO ALMACENADO INSERTAR GARANTE

CREATE PROC SP_INSERTAR_GARANTE
(
	@NOMBRE NVARCHAR(30),
	@APELLIDO NVARCHAR(60),
	@CEDULA NVARCHAR(15),
	@TELEFONO1 VARCHAR(10),
	@CELULAR VARCHAR(10),
	@DIRECCION NVARCHAR(256),
	@TRABAJO NVARCHAR(70),
	@SUELDO DECIMAL (18,2) 
)
AS
INSERT INTO GARANTE VALUES (@NOMBRE, @APELLIDO, @CEDULA, @TELEFONO1, @CELULAR, @DIRECCION, @TRABAJO, @SUELDO)

GO

--------------------------------------------------------- STOREPROCEDURES CREDITO ---------------------------------------------------------

-- PROCEDIMIENTO ALMACENADO BUSCAR CREDITO

CREATE PROC SP_LISTAR_CREDITO(
@ID INT
)
AS
SELECT * FROM CREDITO WHERE IDPAGOS = @ID

GO

-- PROCEDIMIENTO ALMACENADO INSERTAR CREDITO

CREATE PROC SP_INSERTAR_CREDITO
(
	@NO_PAGO INT,
	@FECHA DATE,
	@CUOTAS DECIMAL (18,2),
	@CAPITAL DECIMAL(18,2),
	@INTERES DECIMAL(18,2),
	@MORA DECIMAL(18,2),
	@IDPAGO INT
)
AS
INSERT INTO CREDITO (NO_PAGO, FECHA, CUOTAS, CAPITAL, INTERES, MORA, ESTADO, IDPAGOS)
VALUES (@NO_PAGO, @FECHA, @CUOTAS, @CAPITAL, @INTERES, @MORA, 'NO PAGO', @IDPAGO)

GO

--------------------------------------------------------- STOREPROCEDURES COMPRAS ---------------------------------------------------------

-- PROCEDIMIENTO ALMACENADO BUSCAR COMPRAS
CREATE PROC SP_BUSCAR_COMPRA(
@BUSCAR INT
)
AS
SELECT * FROM COMPRA WHERE IDCOMPRA = @BUSCAR

GO

-- PROCEDIMIENTO ALMACENADO MOSTRAR COMPRAS

CREATE PROC SP_MOSTRAR_COMPRA
AS
SELECT IDCOMPRA, v.CODIGO, PROVEEDOR, u.NOMBRE + ' ' + u.APELLIDO as USUARIO, FECHA, TOTAL FROM COMPRA v
INNER JOIN USUARIO u ON v.IDUSUARIO = u.IDUSUARIO
ORDER BY IDCOMPRA DESC

GO

-- PROCEDIMIENTO ALMACENADO INSERTAR COMPRAS

CREATE PROC SP_INSERTAR_COMPRA(
	@FECHA DATE,
	@TOTAL DECIMAL(18,2),
	@PROVEEDOR Nvarchar(60),
	@IDUSUARIO INT
)
AS
INSERT INTO COMPRA VALUES(@FECHA, @TOTAL, @PROVEEDOR, @IDUSUARIO)

GO

-- PROCEDIMIENTO OBTENER ID COMPRAS

CREATE PROC SP_OBTENER_ID_COMPRA
AS
SELECT MAX(IDCOMPRA) AS ID FROM COMPRA

GO

--------------------------------------------------------- STOREPROCEDURES DETALLECOMPRA ---------------------------------------------------------


-- MOSTRAR DETALLECOMPRA
CREATE PROC SP_LISTAR_DETALLE_COMPRA(
@ID INT
)
AS
SELECT d.CODIGO, c.CODIGO, p.PRODUCTO, PRECIO_COMPRA, CANTIDAD, SUBTOTAL  FROM DETALLE_COMPRA d
INNER JOIN PRODUCTOS p ON d.IDPRODUCTO = p.IDPRODUCTO
INNER JOIN COMPRA c ON d.IDCOMPRA = c.IDCOMPRA
WHERE d.IDCOMPRA = @ID

GO

-- CREATE DETALLECOMPRA
CREATE PROC SP_DETALLE_COMPRA(
	@PRECIOCOMPRA DECIMAL (18,2),
	@CANTIDAD INT,
	@SUBTOTAL DECIMAL(18,2),
	@IDCOMPRA INT,
	@IDPRODUCTO INT
	)
	AS
	INSERT INTO DETALLE_COMPRA VALUES(@PRECIOCOMPRA, @CANTIDAD, @SUBTOTAL, @IDCOMPRA, @IDPRODUCTO)



--------------------------------------------------------- STOREPROCEDURES PAGOFACTURA ---------------------------------------------------------
GO

-- PROCEDIMIENTO ALMACENADO BUSCAR PAGOFACTURA

CREATE PROC SP_BUSCARPAGOFACTURA
@BUSCAR NVARCHAR(20)
AS
SELECT TOP 25
PAGOFACTURA.IDPAGOF,
PAGOFACTURA.CODIGO,
c.NOMBRE + ' ' + c.APELLIDO AS CLIENTES,
PAGOFACTURA.FECHA,
PAGOFACTURA.DESCRIPCION,
PAGOFACTURA.CUOTAS_PAGADAS,
PAGOFACTURA.CUOTAS_FALTANTES,
PAGOFACTURA.TOTAL,
USUARIO.NOMBRE + ' ' + USUARIO.APELLIDO AS USUARIO,
PAGOFACTURA.IDCLIENTE
FROM PAGOFACTURA
INNER JOIN CLIENTE c ON PAGOFACTURA.IDCLIENTE = c.IDCLIENTE
INNER JOIN USUARIO ON PAGOFACTURA.IDUSUARIO = USUARIO.IDUSUARIO
WHERE c.NOMBRE + ' ' + c.APELLIDO LIKE  @BUSCAR + '%'
ORDER BY FECHA DESC

GO

-- PROCEDIMIENTO ALMACENADO INSERTAR PAGOFACTURA

CREATE PROC SP_INSERTARPAGOFACTURA
@FECHA DATE,
@DESCRIPCION NVARCHAR (100),
@CUOTAS_PAGADAS INT,
@CUOTAS_FALTANTES INT,
@TOTAL DECIMAL (18,2),	
@IDCLIENTE INT,
@IDUSUARIO INT
AS
INSERT INTO PAGOFACTURA VALUES (@FECHA, @DESCRIPCION, @CUOTAS_PAGADAS, @CUOTAS_FALTANTES, @TOTAL, @IDCLIENTE,@IDUSUARIO)

GO

-- PROCEDIMIENTO ALMACENADO ELIMINAR PAGOFACTURA

CREATE PROC SP_ELIMINARPAGOFACTURA
@IDPAGOF INT
AS
DELETE PAGOFACTURA
WHERE IDPAGOF = @IDPAGOF